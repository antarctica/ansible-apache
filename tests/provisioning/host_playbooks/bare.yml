---
# Perform a set of tasks to check the selected features of a roles is applied.

- name: test role is correctly applied for an Apache web-server with minimal configuration
  hosts: barc-apache-test-bare.v.m
  remote_user: controller
  sudo: yes
  vars_files:
    - ../../../../apache/defaults/main.yml
  tasks:
    - name: determine if apache package is installed
      command: dpkg -s apache2
      changed_when: False
      register: apache_fact_apache_package_is_installed
    - name: assert apache package is installed
      assert: 
        that:
          - "'install ok installed' in apache_fact_apache_package_is_installed.stdout"

    - name: determine if http listen port is correctly set
      command: 'grep -Fxq "Listen {{ apache_server_http_port }}  # HTTP port" /etc/apache2/ports.conf'
      changed_when: False
    - name: determine if https listen port is correctly set
      command: 'grep -Fxq "        Listen {{ apache_server_https_port }}  # HTTPS port" /etc/apache2/ports.conf'
      changed_when: False

    - name: determine if apache rewrite module is enabled
      stat: path=/etc/apache2/mods-enabled/rewrite.load
      register: apache_fact_module_rewrite_is_enabled
    - name: assert apache rewrite module is enabled
      assert:
        that:
          - "apache_fact_module_rewrite_is_enabled.stat.exists == True"
          - "apache_fact_module_rewrite_is_enabled.stat.islnk == True"
    - name: determine if ports are set correctly within UFW application definition
      command: cat /etc/ufw/applications.d/BARC-apache.ufw.profile
      changed_when: False
      register: apache_fact_ports_are_set_in_ufw_application_definition
    - name: assert http listening port is set correctly within UFW application definition
      assert:
        that:
          - "'# HTTP port\nports={{ apache_server_http_port }}/tcp' in apache_fact_ports_are_set_in_ufw_application_definition.stdout"
    - name: assert https listening port is set correctly within UFW application definition
      assert:
        that:
          - "'# HTTPS port\nports={{ apache_server_https_port }}/tcp' in apache_fact_ports_are_set_in_ufw_application_definition.stdout"
    - name: check if default apache UFW application definition file is commented out
      command: 'grep -Fxq "#[Apache]" /etc/ufw/applications.d/apache2-utils.ufw.profile'
      changed_when: False
    - name: check if default apache UFW directory is absent
      stat: path="/etc/ufw/applications.d/apache2"
      changed_when: False
      register: apache_fact_apache_ufw_directory_is_removed
    - name: assert default apache UFW directory is absent
      assert:
        that:
          - "apache_fact_apache_ufw_directory_is_removed.stat.exists == False"

    - name: determine if default apache additional configuration files are disabled
      stat: path="{{ apache_enabled_configs_dir }}/{{ item }}"
      with_items: "{{ apache_default_enabled_configs }}" 
      register: apache_fact_default_apache_additional_configurations_are_disabled
    - name: assert default apache additional configuration files are disabled
      assert: { that: "item.stat.exists == False" }
      with_items: "{{ apache_fact_default_apache_additional_configurations_are_disabled.results }}"

    - name: determine if default content is absent
      stat: path=/var/www/html
      changed_when: False
      register: apache_fact_default_content_is_removed
    - name: assert default content is absent
      assert:
        that:
          - "apache_fact_default_content_is_removed.stat.exists == False"

    - name: determine which groups the app user belongs to
      command: "groups {{ apache_app_user_username }}"
      changed_when: False
      register: apache_fact_app_user_group_memberships
    - name: assert app user is a member of the web-server group
      assert:
        that:
          - "'www-data' in apache_fact_app_user_group_memberships.stdout"
    - name: determine ownership of default document root
      stat: path=/var/www
      changed_when: False
      register: apache_fact_default_document_root_stat
    - name: assert default document root is owned by app user
      assert:
        that:
          - "apache_fact_default_document_root_stat.stat.pw_name == apache_app_user_username"

    - name: determine if default apache virtual host is absent
      stat: path=/etc/apache2/sites-enabled/000-default.conf
      changed_when: False
      register: apache_fact_default_apache_virtual_host_is_removed
    - name: assert default apache virtual host is absent
      assert:
        that:
          - "apache_fact_default_apache_virtual_host_is_removed.stat.exists == False"
